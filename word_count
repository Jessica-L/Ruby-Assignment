# Part3: Word Count
# implement method count_words, returns hash of word totals
def count_words(string)
    # Create new hash
    h = Hash.new(0)
    # Make case insensitive, search for all non-whitespace word characters,
    # map puts each word found into h, h assigns value to each word key
    # showing how many times it occurs in the string parameter.
    string.downcase.scan(/\w+/).map{|word| h[word] = string.downcase.scan(/\b#{word}\b/).size}
    return h

end

puts "Test 1: How many words in 'A man, a plan, a canal -- Panama!'?"
hash1 = count_words("A man, a plan, a canal -- Panama")
puts hash1
    # => {'a' => 3, 'man' => 1, 'canal' => 1, 'panama' => 1, 'plan' => 1}

puts "Test 2: How many words in 'Doo bee doo bee doo'?"
hash2 = count_words("Doo bee doo bee doo")
puts hash2
    # => {'doo' => 3, 'bee' => 2}


# Referenced:
# http://stackoverflow.com/questions/9448456/count-words-without-loops


# NOTE: This test does not pass for the above code. So as an extra challenge, try to write Ruby code
# that can handle words like C++ and for-loop without affecting my results for the above tests. :-)
puts "Test 3: How many words in 'For a for-loop constraint, go recursion! Are you in Ruby or C++?'?"
hash3 = count_words("For a for-loop constraint, go recursion! Are you in Ruby or C++?")
puts hash3

